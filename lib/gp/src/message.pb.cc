// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace test {

    namespace {

        const ::google::protobuf::Descriptor *Msg_descriptor_ = NULL;
        const ::google::protobuf::internal::GeneratedMessageReflection *
                Msg_reflection_ = NULL;

    }  // namespace


    void protobuf_AssignDesc_message_2eproto() {
        protobuf_AddDesc_message_2eproto();
        const ::google::protobuf::FileDescriptor *file =
                ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
                        "message.proto");
        GOOGLE_CHECK(file != NULL);
        Msg_descriptor_ = file->message_type(0);
        static const int Msg_offsets_[2] = {
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg, name_),
                GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg, age_),
        };
        Msg_reflection_ =
                new ::google::protobuf::internal::GeneratedMessageReflection(
                        Msg_descriptor_,
                        Msg::default_instance_,
                        Msg_offsets_,
                        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg, _has_bits_[0]),
                        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg, _unknown_fields_),
                        -1,
                        ::google::protobuf::DescriptorPool::generated_pool(),
                        ::google::protobuf::MessageFactory::generated_factory(),
                        sizeof(Msg));
    }

    namespace {

        GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);

        inline void protobuf_AssignDescriptorsOnce() {
            ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                                               &protobuf_AssignDesc_message_2eproto);
        }

        void protobuf_RegisterTypes(const ::std::string &) {
            protobuf_AssignDescriptorsOnce();
            ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
                    Msg_descriptor_, &Msg::default_instance());
        }

    }  // namespace

    void protobuf_ShutdownFile_message_2eproto() {
        delete Msg::default_instance_;
        delete Msg_reflection_;
    }

    void protobuf_AddDesc_message_2eproto() {
        static bool already_here = false;
        if (already_here) return;
        already_here = true;
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
                "\n\rmessage.proto\022\004test\" \n\003Msg\022\014\n\004name\030\001 \002"
                        "(\t\022\013\n\003age\030\002 \002(\005", 55);
        ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
                "message.proto", &protobuf_RegisterTypes);
        Msg::default_instance_ = new Msg();
        Msg::default_instance_->InitAsDefaultInstance();
        ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_message_2eproto);
    }

// Force AddDescriptors() to be called at static initialization time.
    struct StaticDescriptorInitializer_message_2eproto {
        StaticDescriptorInitializer_message_2eproto() {
            protobuf_AddDesc_message_2eproto();
        }
    } static_descriptor_initializer_message_2eproto_;

// ===================================================================

#ifndef _MSC_VER
    const int Msg::kNameFieldNumber;
    const int Msg::kAgeFieldNumber;
#endif  // !_MSC_VER

    Msg::Msg()
            : ::google::protobuf::Message() {
        SharedCtor();
        // @@protoc_insertion_point(constructor:test.Msg)
    }

    void Msg::InitAsDefaultInstance() {
    }

    Msg::Msg(const Msg &from)
            : ::google::protobuf::Message() {
        SharedCtor();
        MergeFrom(from);
        // @@protoc_insertion_point(copy_constructor:test.Msg)
    }

    void Msg::SharedCtor() {
        ::google::protobuf::internal::GetEmptyString();
        _cached_size_ = 0;
        name_ = const_cast< ::std::string *>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        age_ = 0;
        ::memset(_has_bits_, 0, sizeof(_has_bits_));
    }

    Msg::~Msg() {
        // @@protoc_insertion_point(destructor:test.Msg)
        SharedDtor();
    }

    void Msg::SharedDtor() {
        if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
            delete name_;
        }
        if (this != default_instance_) {
        }
    }

    void Msg::SetCachedSize(int size) const {
        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _cached_size_ = size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
    }

    const ::google::protobuf::Descriptor *Msg::descriptor() {
        protobuf_AssignDescriptorsOnce();
        return Msg_descriptor_;
    }

    const Msg &Msg::default_instance() {
        if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
        return *default_instance_;
    }

    Msg *Msg::default_instance_ = NULL;

    Msg *Msg::New() const {
        return new Msg;
    }

    void Msg::Clear() {
        if (_has_bits_[0 / 32] & 3) {
            if (has_name()) {
                if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
                    name_->clear();
                }
            }
            age_ = 0;
        }
        ::memset(_has_bits_, 0, sizeof(_has_bits_));
        mutable_unknown_fields()->Clear();
    }

    bool Msg::MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream *input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:test.Msg)
        for (; ;) {
            ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
            tag = p.first;
            if (!p.second) goto handle_unusual;
            switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
                // required string name = 1;
                case 1: {
                    if (tag == 10) {
                        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                                input, this->mutable_name()));
                        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
                                this->name().data(), this->name().length(),
                                ::google::protobuf::internal::WireFormat::PARSE,
                                "name");
                    } else {
                        goto handle_unusual;
                    }
                    if (input->ExpectTag(16)) goto parse_age;
                    break;
                }

                    // required int32 age = 2;
                case 2: {
                    if (tag == 16) {
                        parse_age:
                        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                                ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                                input, &age_)));
                        set_has_age();
                    } else {
                        goto handle_unusual;
                    }
                    if (input->ExpectAtEnd()) goto success;
                    break;
                }

                default: {
                    handle_unusual:
                    if (tag == 0 ||
                        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                        goto success;
                    }
                    DO_(::google::protobuf::internal::WireFormat::SkipField(
                            input, tag, mutable_unknown_fields()));
                    break;
                }
            }
        }
        success:
        // @@protoc_insertion_point(parse_success:test.Msg)
        return true;
        failure:
        // @@protoc_insertion_point(parse_failure:test.Msg)
        return false;
#undef DO_
    }

    void Msg::SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream *output) const {
        // @@protoc_insertion_point(serialize_start:test.Msg)
        // required string name = 1;
        if (has_name()) {
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
                    this->name().data(), this->name().length(),
                    ::google::protobuf::internal::WireFormat::SERIALIZE,
                    "name");
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                    1, this->name(), output);
        }

        // required int32 age = 2;
        if (has_age()) {
            ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->age(), output);
        }

        if (!unknown_fields().empty()) {
            ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
                    unknown_fields(), output);
        }
        // @@protoc_insertion_point(serialize_end:test.Msg)
    }

    ::google::protobuf::uint8 *Msg::SerializeWithCachedSizesToArray(
            ::google::protobuf::uint8 *target) const {
        // @@protoc_insertion_point(serialize_to_array_start:test.Msg)
        // required string name = 1;
        if (has_name()) {
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
                    this->name().data(), this->name().length(),
                    ::google::protobuf::internal::WireFormat::SERIALIZE,
                    "name");
            target =
                    ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
                            1, this->name(), target);
        }

        // required int32 age = 2;
        if (has_age()) {
            target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->age(), target);
        }

        if (!unknown_fields().empty()) {
            target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
                    unknown_fields(), target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:test.Msg)
        return target;
    }

    int Msg::ByteSize() const {
        int total_size = 0;

        if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
            // required string name = 1;
            if (has_name()) {
                total_size += 1 +
                              ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->name());
            }

            // required int32 age = 2;
            if (has_age()) {
                total_size += 1 +
                              ::google::protobuf::internal::WireFormatLite::Int32Size(
                                      this->age());
            }

        }
        if (!unknown_fields().empty()) {
            total_size +=
                    ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
                            unknown_fields());
        }
        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _cached_size_ = total_size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
        return total_size;
    }

    void Msg::MergeFrom(const ::google::protobuf::Message &from) {
        GOOGLE_CHECK_NE(&from, this);
        const Msg *source =
                ::google::protobuf::internal::dynamic_cast_if_available<const Msg *>(
                        &from);
        if (source == NULL) {
            ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        } else {
            MergeFrom(*source);
        }
    }

    void Msg::MergeFrom(const Msg &from) {
        GOOGLE_CHECK_NE(&from, this);
        if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
            if (from.has_name()) {
                set_name(from.name());
            }
            if (from.has_age()) {
                set_age(from.age());
            }
        }
        mutable_unknown_fields()->MergeFrom(from.unknown_fields());
    }

    void Msg::CopyFrom(const ::google::protobuf::Message &from) {
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    void Msg::CopyFrom(const Msg &from) {
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    bool Msg::IsInitialized() const {
        if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

        return true;
    }

    void Msg::Swap(Msg *other) {
        if (other != this) {
            std::swap(name_, other->name_);
            std::swap(age_, other->age_);
            std::swap(_has_bits_[0], other->_has_bits_[0]);
            _unknown_fields_.Swap(&other->_unknown_fields_);
            std::swap(_cached_size_, other->_cached_size_);
        }
    }

    ::google::protobuf::Metadata Msg::GetMetadata() const {
        protobuf_AssignDescriptorsOnce();
        ::google::protobuf::Metadata metadata;
        metadata.descriptor = Msg_descriptor_;
        metadata.reflection = Msg_reflection_;
        return metadata;
    }


// @@protoc_insertion_point(namespace_scope)

}  // namespace test

// @@protoc_insertion_point(global_scope)
